# -*- coding: utf-8 -*-
"""BUSQUEDA DE RAICES.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e3Nn885yoMBJgi2cMnuEzDCUnl-9WsrZ
"""

def diferencia_modificada(T, Vmpp, Impp, Eficiencia, Consumo_Promedio, T_inicio, T_fin, k):
    # Función de diferencia modificada con término de pérdida
    P_max = Vmpp * Impp
    if T_inicio <= T <= T_fin:
        return Eficiencia * (P_max - Consumo_Promedio) - k * T
    else:
        return -Consumo_Promedio


def encontrar_raiz_newton_raphson_modificado(Vmpp, Impp, Eficiencia, Consumo_Promedio, T_inicio, T_fin, tol=1e-6, max_iter=1000, epsilon=1e-12, k=0.1):
    # Método de Newton-Raphson para encontrar la raíz de la función de diferencia modificada
    T_guess = (T_inicio + T_fin) / 2

    for _ in range(max_iter):
        f_guess = diferencia_modificada(T_guess, Vmpp, Impp, Eficiencia, Consumo_Promedio, T_inicio, T_fin, k)

        # Aproximación numérica de la derivada con regularización
        h = tol
        df_guess = (diferencia_modificada(T_guess + h, Vmpp, Impp, Eficiencia, Consumo_Promedio, T_inicio, T_fin, k) - f_guess) / (h + epsilon)

        # Verificar si la derivada es cercana a cero
        if abs(df_guess) < 1e-12:
            print("La derivada es cercana a cero.")
            return

        T_guess = T_guess - f_guess / df_guess

        if abs(f_guess) < tol:
            return T_guess

    print("No se encontró una raíz después de {} iteraciones.".format(max_iter))
    return None

# Valores de ejemplo, ajusta según tus necesidades
Vmpp = 42.8
Impp = 11.69
Eficiencia = 0.209  # 20.9%
Consumo_Promedio = 499  # en kilovatios-hora
T_inicio, T_fin = 0, 6  # Horas de máxima generación solar

# Utilizar el método de Newton-Raphson con función de diferencia modificada
raiz_modificada = encontrar_raiz_newton_raphson_modificado(Vmpp, Impp, Eficiencia, Consumo_Promedio, T_inicio, T_fin)

if raiz_modificada is not None:
    print("La raíz encontrada con Newton-Raphson (función modificada) es:", raiz_modificada, "horas")
else:
    print("No hay suficiente energía disponible para cubrir el consumo promedio.")
